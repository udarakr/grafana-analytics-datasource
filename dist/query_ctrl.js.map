{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","AnalyticsDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","$q","scope","q","target","table","metric","tableSegment","getSegmentForValue","metricSegment","datasource","metricFindQuery","then","transformToSegments","value","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,qB,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;oDAGKC,4B;;;AAET,sDAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,EAA7C,EAAkD;AAAA;;AAAA,4KACxCH,MADwC,EAChCC,SADgC;;AAG9C,0BAAKG,KAAL,GAAaJ,MAAb;AACA,0BAAKK,CAAL,GAASF,EAAT;AACA,0BAAKD,YAAL,GAAoBA,YAApB;;AAEA,0BAAKI,MAAL,CAAYC,KAAZ,GAAoB,MAAKD,MAAL,CAAYC,KAAZ,IAAqB,EAAzC;AACA,0BAAKD,MAAL,CAAYE,MAAZ,GAAqB,MAAKF,MAAL,CAAYE,MAAZ,IAAsB,EAA3C;;AAEA,0BAAKC,YAAL,GAAoBP,aAAaQ,kBAAb,CAAgC,MAAKJ,MAAL,CAAYC,KAA5C,EAAmD,cAAnD,CAApB;AACA,0BAAKI,aAAL,GAAqBT,aAAaQ,kBAAb,CAAgC,MAAKJ,MAAL,CAAYE,MAA5C,EAAoD,eAApD,CAArB;AAX8C;AAYjD;;;;gDAEW;AACR,+BAAO,KAAKI,UAAL,CAAgBC,eAAhB,CAAgC,EAAC,SAAS,OAAV,EAAmB,UAAU,KAAKP,MAAlC,EAAhC,EACFQ,IADE,CACG,KAAKZ,YAAL,CAAkBa,mBAAlB,CAAsC,KAAtC,CADH,CAAP;AAEH;;;wDAEmB;AAChB,+BAAO,KAAKH,UAAL,CAAgBC,eAAhB,CAAgC,EAAC,SAAS,QAAV,EAAoB,UAAU,KAAKP,MAAnC,EAAhC,EACFQ,IADE,CACG,KAAKZ,YAAL,CAAkBa,mBAAlB,CAAsC,KAAtC,CADH,CAAP;AAEH;;;mDAEc;AACX,6BAAKT,MAAL,CAAYC,KAAZ,GAAoB,KAAKE,YAAL,CAAkBO,KAAtC;AACA,6BAAKC,SAAL,CAAeC,OAAf;AACH;;;2DAEsB;AACnB,6BAAKZ,MAAL,CAAYE,MAAZ,GAAqB,KAAKG,aAAL,CAAmBK,KAAxC;AACA,6BAAKC,SAAL,CAAeC,OAAf;AACH;;;;cAlC6CpB,S;;;;AAqClDC,yCAA6BoB,WAA7B,GAA2C,4BAA3C","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class AnalyticsDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv, $q)  {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.q = $q;\n        this.uiSegmentSrv = uiSegmentSrv;\n\n        this.target.table = this.target.table || '';\n        this.target.metric = this.target.metric || '';\n\n        this.tableSegment = uiSegmentSrv.getSegmentForValue(this.target.table, 'select table');\n        this.metricSegment = uiSegmentSrv.getSegmentForValue(this.target.metric, 'select metric');\n    }\n\n    getTables() {\n        return this.datasource.metricFindQuery({'query': 'table', 'target': this.target})\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getMetricSegments() {\n        return this.datasource.metricFindQuery({'query': 'metric', 'target': this.target})\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    tableChanged() {\n        this.target.table = this.tableSegment.value;\n        this.panelCtrl.refresh();\n    }\n\n    metricSegmentChanged() {\n        this.target.metric = this.metricSegment.value;\n        this.panelCtrl.refresh();\n    }\n}\n\nAnalyticsDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}